#!/bin/bash
#SBATCH --job-name=mas_post
##SBATCH --dependency=afterok:17468408
#SBATCH -p radclouds
#SBATCH -N 1
#SBATCH -n 64
#SBATCH --nodelist=c874
#SBATCH --exclusive
#SBATCH --output=outbatch.out%j.txt
#SBATCH --error=outbatch.err%j.txt
#SBATCH -t 1:00:00 # max job run time HH:MM:SS

# IMPORTANT: This .job must be read with an argument ($1) that is equal to the parent directory of the respective simulation
	# This is directory where raw, L1, L2, etc. exist.

# This is a master script that will concat all the wrfout files (raw), extract variables (L1), interpolate variables (L2), and do cross-sectional analysis (L3).

# # Concat
# export job_post_proc_id=$(sbatch "/home/hragnajarian/PhD/scripts/post_proc.job" $1|tr -d -c 0-9)
# echo "post_proc Job ID: ${job_post_proc_id}"

# # Extract
# sed -i "/--dependency/c\#SBATCH --dependency=afterok:${job_post_proc_id}" "/home/hragnajarian/PhD/scripts/run_extract.job"
# export job_run_extract_id=$(sbatch "/home/hragnajarian/PhD/scripts/run_extract.job" $1|tr -d -c 0-9)
# echo "extract Job ID: ${job_run_extract_id}"

# # Interpolate
# sed -i "/--dependency/c\#SBATCH --dependency=afterok:${job_run_extract_id}" "/home/hragnajarian/PhD/scripts/run_interp.job"
# export job_run_interp_id=$(sbatch "/home/hragnajarian/PhD/scripts/run_interp.job" $1|tr -d -c 0-9)
# echo "interp Job ID: ${job_run_interp_id}"

# # Cross-section
# sed -i "/--dependency/c\#SBATCH --dependency=afterok:${job_run_interp_id}" "/home/hragnajarian/PhD/scripts/run_cross_section.job"
# export job_run_cross_section_id=$(sbatch "/home/hragnajarian/PhD/scripts/run_cross_section.job" $1|tr -d -c 0-9)
# echo "cross Job ID: ${job_run_cross_section_id}"

############ If you want to just run post-processing, uncomment this section and comment out the previous section ############

# Declare the parent dir:
	# This is where you would keep all the directories where the simulations directories are held.
parent_dir="/ourdisk/hpc/radclouds/auto_archive_notyet/tape_2copies/hragnajarian/wrfout.files/new10day-2015-11-22-12--12-03-00/CRFoff"

# List all the directories that have been made via mkdir_and_subdirectories.py
directories=($(find "$parent_dir" -mindepth 1 -maxdepth 1 -type d | sort))
# Declare a counter. This acts as a condition for batch_real.job.
counter=0
for dir in "${directories[@]}"; do	# This is a for-loop with array elements (loops through directories)
	echo "This is the counter: ${counter}"
	echo "This is the current processing directory: ${dir}"

	# Step 1, if this is the first itteration, then comment out the dependency within run_interp.job, else make it dependent on if run_cross_section.job has completed
	if [[ "$counter" -eq 0 ]]; then
		sed -i '/--dependency/c\##SBATCH --dependency' "/home/hragnajarian/PhD/scripts/run_interp.job"
		echo "Counter is equal to zero"
	else
		# sed -i "/--dependency/c\#SBATCH --dependency=afterok:${job_run_cross_section_id}" "/home/hragnajarian/PhD/scripts/run_interp.job"
	fi

	# Step 2, run run_interp.job and capture the JobID
	export job_run_interp_id=$(sbatch "/home/hragnajarian/PhD/scripts/run_interp.job" "$dir"|tr -d -c 0-9)
	echo "interp Job ID: ${job_run_interp_id}"

	# Step 3, set a dependency for run_cross_section.job where it only runs once run_interp.job is completed.
	sed -i "/--dependency/c\#SBATCH --dependency=afterok:${job_run_interp_id}" "/home/hragnajarian/PhD/scripts/run_cross_section.job"
	# Step 4, run run_cross_section.job and capture the JobID
	export job_run_cross_section_id=$(sbatch "/home/hragnajarian/PhD/scripts/run_cross_section.job" "$dir"|tr -d -c 0-9)
	echo "cross Job ID: ${job_run_cross_section_id}"

	# Advance the counter so that the if else fi statement works
	((counter++))
done



# Old version (doesn't work because it doesn't have dependencies)
# # Concat
# sbatch /home/hragnajarian/experiment_files/post_proc.job $1
# # Extract
# sbatch /home/hragnajarian/experiment_files/run_extract.job $1
# # Interpolate
# sbatch /home/hragnajarian/experiment_files/run_interp.job $1
# # Cross-section
# sbatch /home/hragnajarian/experiment_files/run_cross_section.job $1
